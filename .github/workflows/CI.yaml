name: CI
on:
  push:
    branches:
      - dev
      - release
    tags:
      - v*
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  python_lint:
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/release'
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Code Linting and formatting
      - name: Python Code Quality and Lint
        uses: ricardochaves/python-lint@v1.3.0
        with:
          python-root-list: "app"
          use-pylint: false
          use-pycodestyle: false
          use-flake8: true
          use-black: true
          use-mypy: false
          use-isort: false
          extra-pylint-options: ""
          extra-pycodestyle-options: ""
          extra-flake8-options: ""
          extra-black-options: ""
          extra-mypy-options: ""
          extra-isort-options: ""

  docker_push:
    needs: [python_lint]
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Get image metadata to calculate new version
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1.11.0
        with:
          images: jfdona23/flask-hello-world
          tag-semver: |
            {{version}}

      # Docker login
      - name: Docker Login
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Docker Build and Push
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.2.2
        with:
          push: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/v') }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
